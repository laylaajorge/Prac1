---
title: "Practical Two"
editor: visual
---

### Initialising variables 

```{r}
set.seed(1)
x <- seq(1,100)
#x < - 1:100
ei <- rnorm(length(x),mean=0,sd=0.02)
y <- sin(x/10) + ei 
smoothed <- numeric(100)
```

### Implementation of custom Lowess function

```{r}
customLowess <- function(x,y,f){
  k <- f*length(x)
  for(i in 1:100){
    distance <- abs(x[i]-x)
    distordered <- order(distance)
    x_neigh <- distordered[1:k]
    x_distances <- distance[x_neigh]
    d_max <- max(x_distances)
    Wj <- (1-(distance[x_neigh]/d_max)^3)^3
    W <- diag(Wj)
    xmat <- cbind(1,x[x_neigh])
    ymat <- y[x_neigh]
    beta <- solve(t(xmat)%*%W%*%xmat)%*%t(xmat)%*%W%*%ymat
    smoothed[i] <- beta[1] + beta[2]*x[i]
  }
  return (smoothed)
}
```

### Testing custom Lowess function

```{r}
low1 <- customLowess(x,y,0.4)
```

### Using R's Lowess function with the same input 

```{r}
low2 <- lowess(x,y,f=0.4,iter=0)
```

### Plots

```{r}
library(ggplot2)
plot(x,y,pch=20,xlab="x",ylab="y",main="Comparison of Lowess functions")
lines(x,low1,col="blue",lwd=3)
lines(low2,col="red",lwd=2)
legend("bottomleft",legend=c("Custom Lowess","R's function Lowess"),col=c("blue","red"),lwd=2)

```
