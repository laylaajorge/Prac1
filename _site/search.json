[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistical Computing",
    "section": "",
    "text": "This site contains Practicals 1-3 of Statistical Computing.\nBelow is link to my Github :\nhttps://github.com/laylaajorge/Statistical_computing",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Index</span>"
    ]
  },
  {
    "objectID": "Prac1.html",
    "href": "Prac1.html",
    "title": "2  Practical One",
    "section": "",
    "text": "2.0.1 Finding all row numbers of “airquality” with missing values\n\nrowsNA &lt;-which((is.na(airquality))) \n\n [1]   5  10  25  26  27  32  33  34  35  36  37  39  42  43  45  46  52  53  54\n[20]  55  56  57  58  59  60  61  65  72  75  83  84 102 103 107 115 119 150 158\n[39] 159 164 180 249 250 251\n\n\n\n\n2.0.2 Mean of temperature\n\ntempmean &lt;- mean(airquality$Temp,na.rm=TRUE)\n\n[1] 77.88235\n\n\n\n\n2.0.3 Standard deviation of temperature\n\ntempsd &lt;- sd(airquality$Temp,na.rm=TRUE) \n\n[1] 9.46527\n\n\n\n\n2.0.4 Minimum of temperature\n\ntempmin &lt;- min(airquality$Temp,na.rm=TRUE)  \n\n[1] 56\n\n\n\n\n2.0.5 Maximum of temperature\n\ntempmax &lt;- max(airquality$Temp,na.rm=TRUE) \n\n[1] 97\n\n\n\n\n2.0.6 Mean of Ozone\n\nozonemean &lt;- mean(airquality$Ozone,na.rm=TRUE) \n\n[1] 42.12931\n\n\n\n\n2.0.7 Standard deviation of Ozone\n\nozonesd &lt;- sd(airquality$Ozone,na.rm=TRUE)\n\n[1] 32.98788\n\n\n\n\n2.0.8 Minimum of Ozone\n\nozonemin &lt;- min(airquality$Ozone,na.rm=TRUE) \n\n[1] 1\n\n\n\n\n2.0.9 Maximum of Ozone\n\nozonemax &lt;- max(airquality$Ozone,na.rm=TRUE) \n\n[1] 168\n\n\n\n\n2.0.10 Parameter estimates using matrix calculations\n\nyvalues &lt;- cars$dist \nxvalues &lt;- cars$speed \n\nf &lt;- function(xvalues,yvalues){\n \n  y &lt;- as.matrix(yvalues)\n  x &lt;- cbind(1,as.matrix(xvalues))\n  beta &lt;- solve(t(x)%*%x)%*%t(x)%*%y\n  n &lt;- nrow(y)\n  k &lt;- ncol(x)\n  residual &lt;- (y-x%*%beta)\n  fraction &lt;- 1/(n-k)\n  rss &lt;-sum(residual^2)\n  s &lt;- sqrt(rss*fraction)\n  varres &lt;- s^2*solve(t(x)%*%x)\n  se &lt;- sqrt(diag(varres))\n  return(list(\"coefficents\"=beta,\"std.error\"=se))\n}\nmodelcalc &lt;- f(xvalues,yvalues)\nmodelcalc \n\n$coefficents\n           [,1]\n[1,] -17.579095\n[2,]   3.932409\n\n$std.error\n[1] 6.7584402 0.4155128\n\n\n\n\n2.0.11 Fitting a linear model using lm()\n\nmodelfit &lt;- lm(dist~speed,data=cars) \nsummary(modelfit) \n\n\nCall:\nlm(formula = dist ~ speed, data = cars)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nspeed         3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,    Adjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n\n\n\n\n2.0.12 Comparing coefficients\n\nlmcoe &lt;- coef(modelfit)\n\n(Intercept)       speed \n -17.579095    3.932409 \n\ncalcoe &lt;-modelcalc$coefficents\n\n           [,1]\n[1,] -17.579095\n[2,]   3.932409\n\n\n\n\n2.0.13 Comparing standard errors\n\nlmse &lt;- summary(modelfit)$coefficients[, 2]\n\n(Intercept)       speed \n  6.7584402   0.4155128 \n\ncalstd &lt;- modelcalc$std.error\n\n[1] 6.7584402 0.4155128",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Practical One</span>"
    ]
  },
  {
    "objectID": "Prac2.html",
    "href": "Prac2.html",
    "title": "3  Practical Two",
    "section": "",
    "text": "3.0.1 Initialising variables\n\nset.seed(1)\nx &lt;- seq(1,100)\n#x &lt; - 1:100\nei &lt;- rnorm(length(x),mean=0,sd=0.02)\ny &lt;- sin(x/10) + ei \nsmoothed &lt;- numeric(100)\n\n\n\n3.0.2 Implementation of custom Lowess function\n\ncustomLowess &lt;- function(x,y,f){\n  k &lt;- f*length(x)\n  for(i in 1:100){\n    distance &lt;- abs(x[i]-x)\n    dist_ordered &lt;- order(distance)\n    x_neigh &lt;- dist_ordered[1:k]\n    x_distances &lt;- distance[x_neigh]\n    d_max &lt;- max(x_distances)\n    Wj &lt;- (1-(distance[x_neigh]/d_max)^3)^3\n    W &lt;- diag(Wj)\n    xmat &lt;- cbind(1,x[x_neigh])\n    ymat &lt;- y[x_neigh]\n    beta &lt;- solve(t(xmat)%*%W%*%xmat)%*%t(xmat)%*%W%*%ymat\n    smoothed[i] &lt;- beta[1] + beta[2]*x[i]\n  }\n  return (smoothed)\n}\n\n\n\n3.0.3 Testing custom Lowess function\n\nlow1 &lt;- customLowess(x,y,0.4)\n\n\n\n3.0.4 Using R’s Lowess function with the same input\n\nlow2 &lt;- lowess(x,y,f=0.4,iter=0)\n\n\n\n3.0.5 Plots\n\nlibrary(ggplot2)\nplot(x,y,pch=20,xlab=\"x\",ylab=\"y\",main=\"Comparison of Lowess functions\")\nlines(x,low1,col=\"blue\",lwd=3)\nlines(low2,col=\"red\",lwd=2)\nlegend(\"bottomleft\",legend=c(\"Custom Lowess\",\"R's function Lowess\"),col=c(\"blue\",\"red\"),lwd=2)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practical Two</span>"
    ]
  },
  {
    "objectID": "Prac3.html",
    "href": "Prac3.html",
    "title": "4  Practical Three",
    "section": "",
    "text": "4.0.1 Setup\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\n\n\n\n4.0.2 Displaying data in alternative form\n\ndata(flights,package=\"nycflights13\")\ntibble(flights)\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      517            515         2      830            819\n 2  2013     1     1      533            529         4      850            830\n 3  2013     1     1      542            540         2      923            850\n 4  2013     1     1      544            545        -1     1004           1022\n 5  2013     1     1      554            600        -6      812            837\n 6  2013     1     1      554            558        -4      740            728\n 7  2013     1     1      555            600        -5      913            854\n 8  2013     1     1      557            600        -3      709            723\n 9  2013     1     1      557            600        -3      838            846\n10  2013     1     1      558            600        -2      753            745\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\ndata(airlines,package=\"nycflights13\")\ntibble(airlines)\n\n# A tibble: 16 × 2\n   carrier name                       \n   &lt;chr&gt;   &lt;chr&gt;                      \n 1 9E      Endeavor Air Inc.          \n 2 AA      American Airlines Inc.     \n 3 AS      Alaska Airlines Inc.       \n 4 B6      JetBlue Airways            \n 5 DL      Delta Air Lines Inc.       \n 6 EV      ExpressJet Airlines Inc.   \n 7 F9      Frontier Airlines Inc.     \n 8 FL      AirTran Airways Corporation\n 9 HA      Hawaiian Airlines Inc.     \n10 MQ      Envoy Air                  \n11 OO      SkyWest Airlines Inc.      \n12 UA      United Air Lines Inc.      \n13 US      US Airways Inc.            \n14 VX      Virgin America             \n15 WN      Southwest Airlines Co.     \n16 YV      Mesa Airlines Inc.         \n\n\n\n\n4.0.3 Rewriting provided code\n\nflights|&gt;filter(month==1)|&gt;group_by(carrier)|&gt;summarise(meandist =mean(distance),stddist=sd(distance))|&gt;arrange(meandist)\n\n# A tibble: 16 × 3\n   carrier meandist stddist\n   &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;\n 1 YV          229      0  \n 2 9E          476.   334. \n 3 EV          522.   294. \n 4 US          536.   553. \n 5 MQ          566.   223. \n 6 FL          691.   142. \n 7 OO          733     NA  \n 8 WN          942.   496. \n 9 B6         1062.   681. \n10 DL         1220.   644. \n11 AA         1350.   626. \n12 UA         1462.   778. \n13 F9         1620      0  \n14 AS         2402      0  \n15 VX         2495.    98.2\n16 HA         4983      0  \n\n\n\n\n4.0.4 Explaining Standard deviation with demonstration\n\nflights|&gt;filter(carrier==\"OO\") \n\n# A tibble: 32 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1    30     1222           1115        67     1402           1215\n 2  2013    11     3     1424           1430        -6     1629           1634\n 3  2013    11    10     1443           1430        13     1701           1634\n 4  2013    11    17     1422           1430        -8     1610           1634\n 5  2013    11    25     1803           1759         4     2011           2017\n 6  2013    11    30     1648           1647         1     1814           1811\n 7  2013     6    15     1626           1635        -9     1810           1830\n 8  2013     6    22     1846           1635       131     2107           1830\n 9  2013     8    27     1755           1805       -10     1956           1953\n10  2013     8    28     2039           1805       154     2213           1953\n# ℹ 22 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nflights|&gt;filter(carrier==\"HA\") |&gt;pull(distance)\n\n  [1] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n [16] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n [31] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n [46] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n [61] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n [76] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n [91] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[106] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[121] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[136] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[151] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[166] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[181] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[196] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[211] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[226] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[241] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[256] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[271] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[286] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[301] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[316] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n[331] 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983 4983\n\n\n\n4.0.4.1 The standard deviation is NA as there is only one value.\n\n\n4.0.4.2 The standard deviation is 0 as all the values for a specific carrier are the same .An example would be HA the distance is 4983 for all therefore the standard deviation value is 0.\n\n\n\n4.0.5 Constructing a dataframe  where the carriers are along the columns, and the rows are the average departure delay (dep_delay) flown by each carrier (carrier) in each month\n\nnew_df &lt;- flights |&gt; group_by(month,carrier) |&gt; summarise(meandelay = mean(dep_delay,na.rm=TRUE)) |&gt;pivot_wider(names_from=carrier,values_from = meandelay)\n\n`summarise()` has grouped output by 'month'. You can override using the\n`.groups` argument.\n\nnew_df\n\n# A tibble: 12 × 17\n# Groups:   month [12]\n   month  `9E`    AA     AS    B6    DL    EV    F9    FL    HA    MQ    OO\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1 16.9   6.93  7.35   9.49  3.85 24.2  10     1.97 54.4   6.49 67   \n 2     2 16.5   8.28  0.722 13.8   5.54 21.5  29.8   5.18 17.4   8.09 NA   \n 3     3 13.4   8.70  8.42  14.2   9.93 26.2  16.8  17.3   1.16  7.19 NA   \n 4     4 13.6  11.7  11.3   15.2   8.17 22.8  24.6  13.1  -2.1  13.7  NA   \n 5     5 22.7   9.66  6.77   9.78  9.74 20.2  35.9  19.2  -1.45 13.9  NA   \n 6     6 29.0  14.6  13.1   20.4  18.7  25.5  29.4  38.8   1.47 20.8  61   \n 7     7 31.4  12.1   2.42  24.9  20.6  26.5  31.8  41.2  -1.71 20.7  NA   \n 8     8 17.3   7.17  2.87  15.7   9.85 16.3  22.2  23.4   1.68 10.1  64   \n 9     9  7.75  5.69 -4.52   6.63  5.53  8.24  8.26 16.9  -5.44  5.35 -4.94\n10    10  9.33  3.00  0.677  2.96  3.42 13.4   9.70 13.7  -5.10  4.48 NA   \n11    11  7.56  3.10  3.08   3.52  2.85  9.83 13.5  16.9  -5.44  3.28  0.8 \n12    12 19.8  11.7  18.0   17.0  10.8  27.9  13.1  26.1  -3.14 12.7  NA   \n# ℹ 5 more variables: UA &lt;dbl&gt;, US &lt;dbl&gt;, VX &lt;dbl&gt;, WN &lt;dbl&gt;, YV &lt;dbl&gt;\n\n\n\n\n4.0.6 Proportion of flights that were delayed but arrived on time\n\nfiltered_fli &lt;-flights |&gt;filter(dep_delay&gt;0&arr_delay&lt;=0) \nfilter_len &lt;-nrow(filtered_fli)\noriginal_len&lt;-nrow(flights)\nprop &lt;- filter_len/original_len\nprop\n\n[1] 0.1052391\n\n\n\n\n4.0.7 Routes that more than one airline flies\n\nflights |&gt; select(origin,dest,carrier)|&gt;distinct() |&gt;group_by(origin,dest) |&gt; summarise(countc=n()) |&gt;filter(countc&gt;1)\n\n`summarise()` has grouped output by 'origin'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 128 × 3\n# Groups:   origin [3]\n   origin dest  countc\n   &lt;chr&gt;  &lt;chr&gt;  &lt;int&gt;\n 1 EWR    ATL        4\n 2 EWR    AUS        2\n 3 EWR    BDL        2\n 4 EWR    BNA        2\n 5 EWR    BOS        3\n 6 EWR    BWI        2\n 7 EWR    CHS        2\n 8 EWR    CLE        2\n 9 EWR    CLT        3\n10 EWR    CVG        2\n# ℹ 118 more rows\n\n\n\n\n4.0.8 Average arrival delay for each airline\n\nmeancalc&lt;-flights|&gt; select(origin,dest,carrier,arr_delay) |&gt;group_by(origin,dest,carrier) |&gt; summarise(meanarr = mean(arr_delay,na.rm=TRUE)) |&gt; left_join(airlines,by= \"carrier\")\n\n`summarise()` has grouped output by 'origin', 'dest'. You can override using\nthe `.groups` argument.\n\nmeancalc\n\n# A tibble: 439 × 5\n# Groups:   origin, dest [224]\n   origin dest  carrier meanarr name                    \n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;                   \n 1 EWR    ALB   EV        14.4  ExpressJet Airlines Inc.\n 2 EWR    ANC   UA        -2.5  United Air Lines Inc.   \n 3 EWR    ATL   9E        -6.25 Endeavor Air Inc.       \n 4 EWR    ATL   DL        10.0  Delta Air Lines Inc.    \n 5 EWR    ATL   EV        19.5  ExpressJet Airlines Inc.\n 6 EWR    ATL   UA        10.5  United Air Lines Inc.   \n 7 EWR    AUS   UA         4.28 United Air Lines Inc.   \n 8 EWR    AUS   WN       -11.2  Southwest Airlines Co.  \n 9 EWR    AVL   EV         8.80 ExpressJet Airlines Inc.\n10 EWR    BDL   EV         6.78 ExpressJet Airlines Inc.\n# ℹ 429 more rows\n\n\n\n\n4.0.9 Worst and best average arrival delay\n\nmaxdelay &lt;- max(meancalc$meanarr, na.rm = TRUE)\nmaxname &lt;- meancalc |&gt; filter(meanarr==maxdelay) \nmaxname\n\n# A tibble: 1 × 5\n# Groups:   origin, dest [1]\n  origin dest  carrier meanarr name                    \n  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;                   \n1 JFK    ATL   EV          128 ExpressJet Airlines Inc.\n\nmindelay &lt;- min(meancalc$meanarr, na.rm = TRUE)\nminname &lt;- meancalc |&gt; filter(meanarr==mindelay)\nminname\n\n# A tibble: 1 × 5\n# Groups:   origin, dest [1]\n  origin dest  carrier meanarr name             \n  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;            \n1 LGA    MSY   9E          -29 Endeavor Air Inc.\n\n\n\n\n4.0.10 Reason for difference\n\n4.0.10.1 A possible reason could be too many flights departing early and arriving late .\n\n\n\n4.0.11 Indentifying inconsistency\n\ndataset &lt;- structure(list(id = c(\"id_1\", \"id_2\", \"id_3\", \"id_4\", \"id_5\", \n                      \"id_6\", \"id_7\", \"id_8\", \"id_9\", \"id_10\", \"id_11\", \"id_12\", \"id_13\", \n                      \"id_14\", \"id_15\", \"id_16\", \"id_17\", \"id_18\", \"id_19\", \"id_20\", \n                      \"id_21\", \"id_22\", \"id_23\", \"id_24\", \"id_25\", \"id_26\", \"id_27\", \n                      \"id_28\", \"id_29\", \"id_30\", \"id_31\", \"id_32\", \"id_33\", \"id_34\", \n                      \"id_35\", \"id_36\", \"id_37\", \"id_38\", \"id_39\", \"id_40\", \"id_41\", \n                      \"id_42\", \"id_43\", \"id_44\", \"id_45\", \"id_46\", \"id_47\", \"id_48\", \n                      \"id_49\", \"id_50\"), age = c(50L, 34L, 70L, 33L, 22L, 61L, 69L, \n                                                 73L, 62L, 56L, 71L, 33L, 73L, 44L, 45L, 46L, 24L, 70L, 46L, 76L, \n                                                 47L, 76L, 28L, 48L, 54L, 27L, 45L, 26L, 61L, 28L, 38L, 55L, 33L, \n                                                 36L, 62L, 58L, 72L, 31L, 34L, 51L, 61L, 64L, 26L, 28L, 60L, 29L, \n                                                 42L, 46L, 79L, 72L), gender = c(\"male\", \"male\", \"male\", \"female\", \n                                                                                 \"female\", \"male\", \"female\", \"male\", \"male\", \"female\", \"female\", \n                                                                                 \"male\", \"male\", \"female\", \"male\", \"male\", \"male\", \"male\", \"female\", \n                                                                                 \"male\", \"male\", \"male\", \"male\", \"female\", \"femal\", \"male\", \"female\", \n                                                                                 \"female\", \"female\", \"female\", \"male\", \"female\", \"female\", \"female\", \n                                                                                 \"male\", \"male\", \"female\", \"male\", \"female\", \"female\", \"male\", \n                                                                                 \"female\", \"female\", \"male\", \"male\", \"female\", \"male\", \"male\", \n                                                                                 \"male\", \"female\"), height = c(174.4, 197.7, 174.1, 194.5, NA, \n                                                                                                               180.4, 170.5, 157.4, 196.8, 165.1, 153, 197.4, 186, 157.1, 177.5, \n                                                                                                               197.7, 179.3, 170.2, 182.4, NA, 165.4, 161, 168.5, 199.2, 157.7, \n                                                                                                               154.6, 157.1, 184.5, 181, 194.6, 183.6, 186.9, 176.1, 183, 191.1, \n                                                                                                               189.3, 199, 172, 165.6, 170.5, 150.5, 159.2, 192.1, 161.6, 162, \n                                                                                                               153.8, 162.3, 186.6, 192.4, 174.9), weight = c(69.4, 62.3, 55.6, \n                                                                                                                                                              69.5, 78.6, 60.8, 72.2, 60.9, 75.1, 67.7, 82.5, 68.7, 67.8, 76.7, \n                                                                                                                                                              87, 61.1, 70.6, 63.3, 81.5, 59.2, 93.2, 87.3, 83.4, 80.9, 68.6, \n                                                                                                                                                              76.5, 93.7, 79.1, 92, 65.6, 85.4, 63.3, 79.7, 74.1, 63.3, 78.2, \n                                                                                                                                                              95.7, 95.1, 63.7, 66.1, 99.3, 81, 96.9, 73.3, 70.3, 83, 57.6, \n                                                                                                                                                              78.6, 61.9, 98.1), blood_type = c(\"O\", \"A\", \"O\", \"O\", \"B\", \"AB\", \n                                                                                                                                                                                                \"O\", \"O\", \"O\", \"AB\", \"A\", \"O\", \"O\", \"O\", \"B\", \"A\", \"B\", \"AB\", \n                                                                                                                                                                                                \"O\", \"AB\", \"A\", \"AB\", \"O\", \"B\", \"A\", \"A\", \"B\", \"AB\", \"A\", \"B\", \n                                                                                                                                                                                                \"B\", \"A\", \"O\", \"O\", \"O\", \"B\", \"O\", \"A\", \"A\", \"B\", \"A\", \"O\", \"AB\", \n                                                                                                                                                                                                \"A\", \"A\", \"O\", \"O\", \"B\", \"A\", \"O\"), disease_status = c(\"diseased\", \n                                                                                                                                                                                                                                                       \"healthy\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \"diseased\", \n                                                                                                                                                                                                                                                       \"healthy\", \"diseased\", \"Healthy\", \"diseased\", \"healthy\", \"diseased\", \n                                                                                                                                                                                                                                                       \"healthy\", \"diseased\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \n                                                                                                                                                                                                                                                       \"healthy\", \"healthy\", \"diseased\", \"healthy\", \"diseased\", \"healthy\", \n                                                                                                                                                                                                                                                       \"healthy\", \"healthy\", \"healthy\", \"diseased\", \"diseased\", \"healthy\", \n                                                                                                                                                                                                                                                       \"healthy\", \"healthy\", \"diseased\", \"diseased\", \"diseased\", \"healthy\", \n                                                                                                                                                                                                                                                       \"diseased\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \n                                                                                                                                                                                                                                                       \"diseased\", \"diseased\", \"diseased\", \"healthy\", \"healthy\", \"diseased\", \n                                                                                                                                                                                                                                                       \"diseased\"), cholesterol = c(228, 223, 213, 198, 166, 151, 195, \n                                                                                                                                                                                                                                                                                    199, 189, 196, 221, 156, 185, 230, 234, 174, 185, 236, 235, 180, \n                                                                                                                                                                                                                                                                                    165, 220, 160, 153, 250, 153, 184, 242, 212, 179, 224, 233, 181, \n                                                                                                                                                                                                                                                                                    199, 220, 214, 214, 248, 191, 162, 203, 173, 199, 187, 248, 189, \n                                                                                                                                                                                                                                                                                    173, 212, 164, 247), glucose = c(96, 78, 101, 119, 103, 91, 86, \n                                                                                                                                                                                                                                                                                                                     NA, 77, 80, 115, 85, 88, 109, NA, 71, 90, 94, 91, 87, 113, 93, \n                                                                                                                                                                                                                                                                                                                     97, 118, 109, 80, 85, 119, 99, 108, 89, 108, 97, 116, 79, 84, \n                                                                                                                                                                                                                                                                                                                     75, 81, 119, NA, 106, 109, 75, 82, 84, 75, 76, 120, 119, 77), \n               smoker = c(\"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\", \n                          \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"yes\", \n                          \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \n                          \"no\", \"yes\", \"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\", \"yes\", \n                          \"no\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"no\", \"no\", \"yes\", \n                          \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"), exercise = c(\"occasional\", \n                                                                                   \"regular\", \"occasional\", \"regular\", \"none\", \"occasional\", \n                                                                                   \"regular\", \"none\", \"occasional\", \"none\", \"occasional\", \"none\", \n                                                                                   \"none\", \"regular\", \"occasional\", \"none\", \"regular\", \"regular\", \n                                                                                   \"none\", \"occasional\", \"none\", \"occasional\", \"occasional\", \n                                                                                   \"occasional\", \"regular\", \"occasional\", \"regular\", \"regular\", \n                                                                                   \"regular\", \"occasional\", \"occasional\", \"none\", \"none\", \"regular\", \n                                                                                   \"occasional\", \"occasional\", \"none\", \"none\", \"none\", \"none\", \n                                                                                   \"occasional\", \"regular\", \"regular\", \"none\", \"regular\", \"occasional\", \n                                                                                   \"occasional\", \"none\", \"occasional\", \"regular\"), income = c(84820L, \n                                                                                                                                              81547L, 22588L, 72490L, 74533L, 25338L, 41469L, 57315L, 63629L, \n                                                                                                                                              88662L, 62615L, 56261L, 58499L, 82232L, 77584L, 77275L, 38468L, \n                                                                                                                                              54510L, 91326L, 78611L, 31402L, 29586L, 21441L, 58269L, 84173L, \n                                                                                                                                              88295L, 37940L, 43750L, 69750L, 92356L, 82518L, 91455L, 68866L, \n                                                                                                                                              51178L, 68275L, 27689L, 35418L, 81318L, 62405L, 86851L, 25654L, \n                                                                                                                                              47553L, 74474L, 51409L, 22607L, 55360L, 96351L, 21516L, 41927L, \n                                                                                                                                              55810L), education = c(\"master\", \"bachelor\", \"PhD\", \"master\", \n                                                                                                                                                                     \"bachelor\", \"highschool\", \"PhD\", \"highschool\", \"PhD\", \"PhD\", \n                                                                                                                                                                     \"bachelor\", \"highschool\", \"master\", \"bachelor\", \"PhD\", \"PhD\", \n                                                                                                                                                                     \"PhD\", \"bachelor\", \"master\", \"highschool\", \"PhD\", \"highschool\", \n                                                                                                                                                                     \"bachelor\", \"master\", \"highschool\", \"highschool\", \"master\", \n                                                                                                                                                                     \"master\", \"bachelor\", \"PhD\", \"highschool\", \"PhD\", \"master\", \n                                                                                                                                                                     \"master\", \"master\", \"PhD\", \"highschool\", \"master\", \"master\", \n                                                                                                                                                                     \"highschool\", \"bachelor\", \"highschool\", \"bachelor\", \"PhD\", \n                                                                                                                                                                     \"bachelor\", \"highschool\", \"master\", \"highschool\", \"bachelor\", \n                                                                                                                                                                     \"bachelor\"), region = c(\"North\", \"South\", \"North\", \"West\", \n                                                                                                                                                                                             \"North\", \"West\", \"South\", \"South\", \"West\", \"South\", \"West\", \n                                                                                                                                                                                             \"South\", \"West\", \"East\", \"North\", \"West\", \"North\", \"North\", \n                                                                                                                                                                                             \"West\", \"North\", \"East\", \"West\", \"South\", \"North\", \"North\", \n                                                                                                                                                                                             \"East\", \"East\", \"North\", \"North\", \"West\", \"South\", \"West\", \n                                                                                                                                                                                             \"West\", \"East\", \"West\", \"North\", \"West\", \"North\", \"East\", \n                                                                                                                                                                                             \"North\", \"West\", \"South\", \"South\", \"East\", \"North\", \"West\", \n                                                                                                                                                                                             \"West\", \"East\", \"North\", \"East\"), marital_status = c(\"divorced\", \n                                                                                                                                                                                                                                                  \"single\", \"divorced\", \"divorced\", \"divorced\", \"divorced\", \n                                                                                                                                                                                                                                                  \"divorced\", \"married\", \"divorced\", \"married\", \"divorced\", \n                                                                                                                                                                                                                                                  \"widowed\", \"married\", \"single\", \"widowed\", \"widowed\", \"single\", \n                                                                                                                                                                                                                                                  \"divorced\", \"widowed\", \"widowed\", \"single\", \"married\", \"single\", \n                                                                                                                                                                                                                                                  \"married\", \"widowed\", \"married\", \"single\", \"single\", \"widowed\", \n                                                                                                                                                                                                                                                  \"married\", \"widowed\", \"divorced\", \"single\", \"married\", \"single\", \n                                                                                                                                                                                                                                                  \"widowed\", \"widowed\", \"married\", \"widowed\", \"divorced\", \"married\", \n                                                                                                                                                                                                                                                  \"married\", \"divorced\", \"single\", \"married\", \"widowed\", \"divorced\", \n                                                                                                                                                                                                                                                  \"divorced\", \"single\", \"divorced\")), row.names = c(NA, -50L\n                                                                                                                                                                                                                                                  ), class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\nUtilsDataRSV::view_cols(dataset)\n\n[1] \"id\"\n [1] \"id_49\" \"id_20\" \"id_35\" \"id_39\" \"id_25\" \"id_42\" \"id_5\"  \"id_47\" \"id_18\"\n[10] \"id_22\" \"id_30\" \"id_14\" \"id_6\"  \"id_32\" \"id_43\" \"id_46\" \"id_13\" \"id_29\"\n[19] \"id_40\" \"id_8\" \n[1] \"30 unique entries not displayed\"\n[1] \"_____________________\"\n[1] \"age\"\n[1] 22 70 79 58 62\n[1] \"_____________________\"\n[1] \"gender\"\n[1] \"female\" \"femal\"  \"male\"  \n[1] \"_____________________\"\n[1] \"height\"\n[1] 197.7 174.1 177.5 174.4    NA\n[1] \"_____________________\"\n[1] \"weight\"\n[1] 69.5 76.5 73.3 99.3 81.0\n[1] \"_____________________\"\n[1] \"blood_type\"\n[1] \"A\"  \"O\"  \"B\"  \"AB\"\n[1] \"_____________________\"\n[1] \"disease_status\"\n[1] \"Healthy\"  \"healthy\"  \"diseased\"\n[1] \"_____________________\"\n[1] \"cholesterol\"\n[1] 248 189 213 250 224\n[1] \"_____________________\"\n[1] \"glucose\"\n[1] 78 99 77 94 NA\n[1] \"_____________________\"\n[1] \"smoker\"\n[1] \"no\"  \"yes\"\n[1] \"_____________________\"\n[1] \"exercise\"\n[1] \"none\"       \"regular\"    \"occasional\"\n[1] \"_____________________\"\n[1] \"income\"\n[1] 51178 82518 84173 21441 69750\n[1] \"_____________________\"\n[1] \"education\"\n[1] \"PhD\"        \"bachelor\"   \"highschool\" \"master\"    \n[1] \"_____________________\"\n[1] \"region\"\n[1] \"North\" \"South\" \"East\"  \"West\" \n[1] \"_____________________\"\n[1] \"marital_status\"\n[1] \"single\"   \"widowed\"  \"divorced\" \"married\" \n[1] \"_____________________\"\n\n\nWarning: Not all unique entries displayed for these non-numeric cols: id",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Practical Three</span>"
    ]
  }
]